#include <stdio.h>
#include <ctype.h>
#define MAX 100

char stack[MAX];
int top = -1;
void push(char ch) {
    stack[++top] = ch;
}

char pop() {
    return stack[top--];
}
int precedence(char ch) {
    if (ch == '+' || ch == '-')
        return 1;
    if (ch == '*' || ch == '/')
        return 2;
    return 0;
}
void infixToPostfix(char infix[]) {
    int i = 0, j = 0;
    char postfix[MAX], ch;

    while (infix[i] != '\0') {
        ch = infix[i];

        if (isalnum(ch)) {
            postfix[j++] = ch;
        } else if (ch == '(') {
            push(ch);
        } else if (ch == ')') {
            while (stack[top] != '(') {
                postfix[j++] = pop();
            }
            pop(); // discard '('
        } else {
            while (top != -1 && precedence(stack[top]) >= precedence(ch)) {
                postfix[j++] = pop();
            }
            push(ch);
        }
        i++;
    }
    while (top != -1) {
        postfix[j++] = pop();
    }
    postfix[j] = '\0';

    printf("Postfix Expression: %s\n", postfix);
}
int main() {
    char infix[MAX];
    
    printf("Enter a valid infix expression: ");
    scanf("%s", infix);
    infixToPostfix(infix);
    return 0;
}
